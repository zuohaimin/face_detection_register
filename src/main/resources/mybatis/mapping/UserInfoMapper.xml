<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.swpu.face_detection_register.dao.UserInfoMapper">
<!--  <resultMap id="BaseResultMap" type="cn.edu.swpu.face_detection_register.model.bo.UserInfo">-->
<!--    <constructor>-->
<!--      <idArg column="userId" javaType="java.lang.String" jdbcType="VARCHAR" />-->
<!--      <arg column="userName" javaType="java.lang.String" jdbcType="VARCHAR" />-->
<!--      <arg column="faceToken" javaType="java.lang.String" jdbcType="VARCHAR" />-->
<!--      <arg column="addTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />-->
<!--      <arg column="modifyTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />-->
<!--      <arg column="isLock" javaType="java.lang.Integer" jdbcType="TINYINT" />-->
<!--      <arg column="isDelete" javaType="java.lang.Integer" jdbcType="TINYINT" />-->
<!--    </constructor>-->
<!--  </resultMap>-->
  <update id="deleteByPrimaryKey" parameterType="java.lang.String">
    update userinfo
    set isDelete=1 and ModifyTime=now()
    where userId = #{userId,jdbcType=VARCHAR} and IsDelete = 0
  </update>
  <insert id="insert" parameterType="cn.edu.swpu.face_detection_register.model.bo.UserInfo">
    insert into userinfo (userId, userName, faceToken, 
      addTime, modifyTime, isLock, 
      isDelete,base64Image)
    values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{faceToken,jdbcType=VARCHAR}, 
      now(), now(), 0,0,#{base64Image})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.edu.swpu.face_detection_register.model.bo.UserInfo">
    update userinfo
    set userName = #{userName,jdbcType=VARCHAR},
      faceToken = #{faceToken,jdbcType=VARCHAR},
      addTime = #{addTime,jdbcType=TIMESTAMP},
      modifyTime = #{modifyTime,jdbcType=TIMESTAMP},
      isLock = #{isLock,jdbcType=BIT},
      isDelete = #{isDelete,jdbcType=BIT}
    where userId = #{userId,jdbcType=VARCHAR} and IsDelete = 0
  </update>
  <update id="batchUpdateIsFaceMsg" parameterType="cn.edu.swpu.face_detection_register.model.bo.UserInfo">
    update userinfo
    set isFaceMsg = #{isFaceMsg}
    where isDelete = 0
    and userId = <foreach collection="userIdList" item="userId" open="(" close=")" separator=",">#{userId}</foreach>
  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultType="cn.edu.swpu.face_detection_register.model.bo.UserInfo">
    select userId, userName, faceToken, addTime, modifyTime, isLock, isDelete
    from userinfo
    where userId = #{userId,jdbcType=VARCHAR} and IsDelete = 0
  </select>
  <select id="selectAll" resultType="cn.edu.swpu.face_detection_register.model.bo.UserInfo">
    select userId, userName, faceToken, addTime, modifyTime, isLock, isDelete
    from userinfo
  </select>
  <select id="selectByFaceToken" parameterType="java.lang.String" resultType="cn.edu.swpu.face_detection_register.model.bo.UserInfo">
    select userId, userName, faceToken, addTime, modifyTime, isLock, isDelete
    from userinfo
    where faceToken = #{faceToken} and isDelete = 0 and isLock = 0
</select>
  <select id="selectByUserName" parameterType="java.lang.String" resultType="cn.edu.swpu.face_detection_register.model.bo.UserInfo">
    select userId, userName, faceToken, addTime, modifyTime, isLock, isDelete
    from userinfo
    where userName = #{userName} and isDelete = 0 and isLock = 0
  </select>
  <select id="selectUserInfoByCondition" parameterType="cn.edu.swpu.face_detection_register.model.bo.UserInfo" resultType="cn.edu.swpu.face_detection_register.model.bo.UserInfo">
    select userId, userName, faceToken, addTime, modifyTime, isLock, isDelete
    from userinfo
    where
        isDelete = 0
        <if test="userId != null">
          and userId = #{userId}
        </if>
        <if test="isFaceMsg != null">
          and isFaceMsg = #{isFaceMsg}
        </if>
    <if test="pageSize != null and pageIndex == null" >
      limit ${pageSize}
    </if>
  </select>
    <select id="selectUserList" parameterType="cn.edu.swpu.face_detection_register.model.dto.VerifyUserNameParam" resultType="cn.edu.swpu.face_detection_register.model.vo.UserSelectVo">
      select userId, userName
      from userinfo
      where isDelete = 0
      <if test="userName != null and userName != '' ">
        and userName like concat(#{userName},'%')
      </if>
    </select>


</mapper>